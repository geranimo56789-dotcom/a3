name: iOS Build - OPTIMIZED

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-15
    timeout-minutes: 60

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x

    - name: Display .NET info
      run: |
        dotnet --version
        dotnet --info
        echo "=== Checking macOS architecture ==="
        uname -m
        arch

    - name: Install MAUI Workload
      run: |
        echo "Updating workloads..."
        dotnet workload update
        echo "Installing MAUI workload..."
        dotnet workload install maui

    - name: List installed workloads
      run: dotnet workload list

    - name: Restore dependencies
      run: |
        echo "Restoring HelloMaui project..."
        dotnet restore HelloMaui/HelloMaui.csproj -v minimal

    - name: Clean previous builds
      run: dotnet clean HelloMaui/HelloMaui.csproj

    - name: Build for iOS Simulator x64 (Intel)
      run: |
        echo "Building for iOS Simulator x64..."
        dotnet build HelloMaui/HelloMaui.csproj \
          -f net8.0-ios \
          -c Release \
          -p:RuntimeIdentifier=iossimulator-x64 \
          -p:MtouchLink=None \
          -p:UseInterpreter=false \
          --no-restore \
          -v minimal

    - name: Build for iOS Simulator ARM64 (Apple Silicon)
      run: |
        echo "Building for iOS Simulator ARM64..."
        dotnet build HelloMaui/HelloMaui.csproj \
          -f net8.0-ios \
          -c Release \
          -p:RuntimeIdentifier=iossimulator-arm64 \
          -p:MtouchLink=None \
          -p:UseInterpreter=false \
          --no-restore \
          -v minimal
      continue-on-error: true

    - name: Try alternative iOS device build
      if: failure()
      run: |
        echo "Trying iOS device build as fallback..."
        dotnet build HelloMaui/HelloMaui.csproj \
          -f net8.0-ios \
          -c Release \
          -p:RuntimeIdentifier=ios-arm64 \
          -p:MtouchLink=None \
          -p:UseInterpreter=false \
          --no-restore \
          -v minimal
      continue-on-error: true

    - name: Verify build outputs
      run: |
        echo "=== Build verification ==="
        echo "Checking for iOS build outputs..."
        find HelloMaui/bin/Release/net8.0-ios/ -type f -name "*.dll" -o -name "*.app" 2>/dev/null || echo "No build outputs found"
        
        echo "Directory structure:"
        ls -la HelloMaui/bin/Release/ 2>/dev/null || echo "No Release folder"
        
        if [ -d "HelloMaui/bin/Release/net8.0-ios" ]; then
          echo "iOS build directory contents:"
          ls -la HelloMaui/bin/Release/net8.0-ios/
          
          for dir in HelloMaui/bin/Release/net8.0-ios/*/; do
            if [ -d "$dir" ]; then
              echo "Contents of $dir:"
              ls -la "$dir"
            fi
          done
        fi

    - name: Upload iOS Simulator x64 Build
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: HelloMaui-iOS-Simulator-x64
        path: HelloMaui/bin/Release/net8.0-ios/iossimulator-x64/
        retention-days: 7

    - name: Upload iOS Simulator ARM64 Build
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: HelloMaui-iOS-Simulator-ARM64
        path: HelloMaui/bin/Release/net8.0-ios/iossimulator-arm64/
        retention-days: 7

    - name: Upload iOS Device Build
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: HelloMaui-iOS-Device-ARM64
        path: HelloMaui/bin/Release/net8.0-ios/ios-arm64/
        retention-days: 7

    - name: Upload Any iOS Build
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: HelloMaui-iOS-All-Builds
        path: HelloMaui/bin/Release/net8.0-ios/
        retention-days: 7
